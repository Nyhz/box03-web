---
import PricingCard from '../home/components/PricingCard.astro'

import { storages as fallbackStorages } from '../../data/storages'
import { getStorages } from '../../lib/querySanity'
import type { IStoragesProps } from '../../types/types'

let storages: IStoragesProps[] = []

try {
	storages = await getStorages()
} catch (error) {
	storages = fallbackStorages
}
---

<style>
	@media (max-width: 768px) {
		.container {
			overflow-x: auto;
			display: flex;
			scroll-snap-type: x mandatory;
			-webkit-overflow-scrolling: touch;
			gap: 20px;
			padding: 0 20px;
		}

		.box {
			flex-shrink: 0;
			scroll-snap-align: center;
			width: 85%;
			max-width: 350px;
		}

		.ghost {
			flex-shrink: 0;
			width: 85%;
			max-width: 350px;
		}
	}

	@media (min-width: 769px) {
		#trasteros {
			display: none;
		}
	}
</style>

<section id="trasteros" class="mx-auto max-w-6xl px-4">
	<h3 class="text-4xl text-primary-title">Elige tu trastero ahora</h3>
	<div class="container mt-16">
		<div class="ghost"></div>
		<!-- Tarjeta fantasma al inicio -->
		{
			storages
				.filter((item) => item.available)
				.map((filteredItem) => (
					<div class="box">
						<PricingCard {...filteredItem} />
					</div>
				))
		}
		<div class="ghost"></div>
		<!-- Tarjeta fantasma al final -->
	</div>
</section>
