---
import TickIcon from '../../icons/TickIcon.astro'

interface IStoragesProps {
	id: number
	name: string
	surface: string
	height: string
	volume: string
	price: string
	available: boolean
}

const { id, name, surface, height, volume, price, available } = Astro.props as IStoragesProps
---

<div class="flex flex-col rounded-3xl bg-primary-bg-component p-8">
	<h2 class="text-4xl text-primary-accent">{name}</h2>
	<p class="mt-4 text-3xl text-primary-title">
		{price}{' '}<span class="text-sm text-primary-text">/mes</span>
	</p>
	<ul class="mt-6 space-y-6">
		<li class="flex gap-3">
			<TickIcon />
			<span class="text-primary-text">Superficie: {surface}</span>
		</li>
		<li class="flex gap-3">
			<TickIcon />
			<span class="text-primary-text">Altura: {height}</span>
		</li>
		<li class="flex gap-3">
			<TickIcon />
			<span class="text-primary-text">Volumen: {volume}</span>
		</li>
	</ul>

	<a
		href="#ampliemos"
		class="contact-button duration-250 mt-6 cursor-pointer rounded-full bg-primary-text px-2 py-4 text-center text-primary-text-inverse transition-all hover:bg-primary-title-hovered disabled:cursor-default disabled:opacity-25 disabled:hover:bg-primary-text"
		data-box-name={name}
	>
		Reservar
	</a>
</div>

<script>
	function handleButtonClick(e: Event) {
		e.preventDefault() // Prevent the default anchor behavior
		const target = e.target as HTMLElement
		const boxName = target.getAttribute('data-box-name')?.replace(/\s+/g, '')
		const messageField = document.querySelector('textarea[name="message"]') as HTMLTextAreaElement
		if (messageField) {
			messageField.value = `Hola! Estoy interesad@ en alquilar el ${boxName}. Os envÃ­o mis datos de contacto!`
		}
		// Scroll to the contact section
		const contactSection = document.querySelector('#ampliemos')
		if (contactSection) {
			contactSection.scrollIntoView({ behavior: 'smooth' })
		}
	}

	document.querySelectorAll('.contact-button').forEach((button) => {
		button.addEventListener('click', handleButtonClick)
	})
</script>
